/*
 * KeyVaultClient
 *
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// DeletedKeyItem : The deleted key item containing the deleted key metadata and information about deletion.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeletedKeyItem {
    /// The url of the recovery object, used to identify and recover the deleted key.
    #[serde(rename = "recoveryId", skip_serializing_if = "Option::is_none")]
    pub recovery_id: Option<String>,
    /// The time when the key is scheduled to be purged, in UTC
    #[serde(rename = "scheduledPurgeDate", skip_serializing_if = "Option::is_none")]
    pub scheduled_purge_date: Option<i32>,
    /// The time when the key was deleted, in UTC
    #[serde(rename = "deletedDate", skip_serializing_if = "Option::is_none")]
    pub deleted_date: Option<i32>,
    /// Key identifier.
    #[serde(rename = "kid", skip_serializing_if = "Option::is_none")]
    pub kid: Option<String>,
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Box<crate::models::KeyAttributes>>,
    /// Application specific metadata in the form of key-value pairs.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<::std::collections::HashMap<String, String>>,
    /// True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.
    #[serde(rename = "managed", skip_serializing_if = "Option::is_none")]
    pub managed: Option<bool>,
}

impl DeletedKeyItem {
    /// The deleted key item containing the deleted key metadata and information about deletion.
    pub fn new() -> DeletedKeyItem {
        DeletedKeyItem {
            recovery_id: None,
            scheduled_purge_date: None,
            deleted_date: None,
            kid: None,
            attributes: None,
            tags: None,
            managed: None,
        }
    }
}


