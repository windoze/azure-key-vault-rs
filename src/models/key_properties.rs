/*
 * KeyVaultClient
 *
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// KeyProperties : Properties of the key pair backing a certificate.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct KeyProperties {
    /// Not supported in this version. Indicates if the private key can be exported.
    #[serde(rename = "exportable", skip_serializing_if = "Option::is_none")]
    pub exportable: Option<bool>,
    /// The type of key pair to be used for the certificate.
    #[serde(rename = "kty", skip_serializing_if = "Option::is_none")]
    pub kty: Option<Kty>,
    /// The key size in bits. For example: 2048, 3072, or 4096 for RSA.
    #[serde(rename = "key_size", skip_serializing_if = "Option::is_none")]
    pub key_size: Option<i32>,
    /// Indicates if the same key pair will be used on certificate renewal.
    #[serde(rename = "reuse_key", skip_serializing_if = "Option::is_none")]
    pub reuse_key: Option<bool>,
    /// Elliptic curve name. For valid values, see JsonWebKeyCurveName.
    #[serde(rename = "crv", skip_serializing_if = "Option::is_none")]
    pub crv: Option<Crv>,
}

impl KeyProperties {
    /// Properties of the key pair backing a certificate.
    pub fn new() -> KeyProperties {
        KeyProperties {
            exportable: None,
            kty: None,
            key_size: None,
            reuse_key: None,
            crv: None,
        }
    }
}

/// The type of key pair to be used for the certificate.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Kty {
    #[serde(rename = "EC")]
    EC,
    #[serde(rename = "EC-HSM")]
    ECHSM,
    #[serde(rename = "RSA")]
    RSA,
    #[serde(rename = "RSA-HSM")]
    RSAHSM,
    #[serde(rename = "oct")]
    Oct,
    #[serde(rename = "oct-HSM")]
    OctHSM,
}
/// Elliptic curve name. For valid values, see JsonWebKeyCurveName.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Crv {
    #[serde(rename = "P-256")]
    _256,
    #[serde(rename = "P-384")]
    _384,
    #[serde(rename = "P-521")]
    _521,
    #[serde(rename = "P-256K")]
    _256K,
}

