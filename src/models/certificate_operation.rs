/*
 * KeyVaultClient
 *
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// CertificateOperation : A certificate operation is returned in case of asynchronous requests.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CertificateOperation {
    /// The certificate id.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "issuer", skip_serializing_if = "Option::is_none")]
    pub issuer: Option<Box<crate::models::IssuerParameters>>,
    /// The certificate signing request (CSR) that is being used in the certificate operation.
    #[serde(rename = "csr", skip_serializing_if = "Option::is_none")]
    pub csr: Option<String>,
    /// Indicates if cancellation was requested on the certificate operation.
    #[serde(rename = "cancellation_requested", skip_serializing_if = "Option::is_none")]
    pub cancellation_requested: Option<bool>,
    /// Status of the certificate operation.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// The status details of the certificate operation.
    #[serde(rename = "status_details", skip_serializing_if = "Option::is_none")]
    pub status_details: Option<String>,
    #[serde(rename = "error", skip_serializing_if = "Option::is_none")]
    pub error: Option<Box<crate::models::Error>>,
    /// Location which contains the result of the certificate operation.
    #[serde(rename = "target", skip_serializing_if = "Option::is_none")]
    pub target: Option<String>,
    /// Identifier for the certificate operation.
    #[serde(rename = "request_id", skip_serializing_if = "Option::is_none")]
    pub request_id: Option<String>,
}

impl CertificateOperation {
    /// A certificate operation is returned in case of asynchronous requests.
    pub fn new() -> CertificateOperation {
        CertificateOperation {
            id: None,
            issuer: None,
            csr: None,
            cancellation_requested: None,
            status: None,
            status_details: None,
            error: None,
            target: None,
            request_id: None,
        }
    }
}


