/*
 * KeyVaultClient
 *
 * The key vault client performs cryptographic key operations and vault operations against the Key Vault service.
 *
 * The version of the OpenAPI document: 7.2
 * 
 * Generated by: https://openapi-generator.tech
 */

/// KeyImportParameters : The key import parameters.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct KeyImportParameters {
    /// Whether to import as a hardware key (HSM) or software key.
    #[serde(rename = "Hsm", skip_serializing_if = "Option::is_none")]
    pub hsm: Option<bool>,
    #[serde(rename = "key")]
    pub key: Box<crate::models::JsonWebKey>,
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<Box<crate::models::KeyAttributes>>,
    /// Application specific metadata in the form of key-value pairs.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<::std::collections::HashMap<String, String>>,
}

impl KeyImportParameters {
    /// The key import parameters.
    pub fn new(key: crate::models::JsonWebKey) -> KeyImportParameters {
        KeyImportParameters {
            hsm: None,
            key: Box::new(key),
            attributes: None,
            tags: None,
        }
    }
}


